name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write
  packages: write
  issues: write
  pull-requests: write

jobs:
  create-release:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          generate_release_notes: true
          draft: false
        env:
          GITHUB_TOKEN: ${{ github.token }}
          
  build:
    needs: create-release
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [windows-latest, macos-latest]
      fail-fast: false
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.17.0'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build and release
        run: npm run release:ci
        env:
          GH_TOKEN: ${{ github.token }}
          GITHUB_TOKEN: ${{ github.token }}
          CSC_IDENTITY_AUTO_DISCOVERY: false
          
      - name: List built files (Unix)
        if: runner.os != 'Windows'
        run: |
          echo "Contents of dist directory:"
          ls -la dist/ || echo "No dist directory found"
          
      - name: List built files (Windows)
        if: runner.os == 'Windows'
        run: |
          echo "Contents of dist directory:"
          if (Test-Path "dist") { Get-ChildItem -Path "dist" -Recurse } else { Write-Output "No dist directory found" }
          
      - name: Upload artifacts manually (fallback)
        if: always()
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/*.exe
            dist/*.dmg
            dist/*.AppImage
            dist/*.deb
            dist/*.rpm
        env:
          GITHUB_TOKEN: ${{ github.token }}